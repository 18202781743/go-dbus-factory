// Code generated by "./generator ./system/org.deepin.dde.keyevent1"; DO NOT EDIT.

package keyevent1

import "fmt"

import "github.com/linuxdeepin/go-lib/dbusutil"
import "github.com/linuxdeepin/go-lib/dbusutil/proxy"
import "github.com/stretchr/testify/mock"

type MockKeyEvent struct {
	MockInterfaceKeyEvent // interface org.deepin.dde.KeyEvent1
	proxy.MockObject
}

type MockInterfaceKeyEvent struct {
	mock.Mock
}

// signal KeyEvent

func (v *MockInterfaceKeyEvent) ConnectKeyEvent(cb func(keycode uint32, pressed bool, ctrlPressed bool, shiftPressed bool, altPressed bool, superPressed bool)) (dbusutil.SignalHandlerId, error) {
	mockArgs := v.Called(cb)

	ret0, ok := mockArgs.Get(0).(dbusutil.SignalHandlerId)
	if !ok {
		panic(fmt.Sprintf("assert: arguments: %d failed because object wasn't correct type: %v", 0, mockArgs.Get(0)))
	}

	return ret0, mockArgs.Error(1)
}
